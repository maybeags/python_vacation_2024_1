# chapter02_condition 패키지 생성
# -> main.py
'''
    1. if문
        if문은 조건이 참(True)일 때만 해당 블록의 코드를 실행합니다.
'''
# age = 20
# if age >= 19:
#     print("성인입니다.")
'''
        if문에서 신경써야 할 점 :
            1) if와 같은 라인에 작성된 코드는 참/거짓으로 구분할 수 있어야만 함.
            2) if와 같은 라인에 있는 조건문이 끝났을 때 콜론(:)으로 마무리
            3) 파이썬에서는 타 언어들과 달리 들여쓰기(indented writing)이 매우 중요
            
    2. if-else 문
        if문 다음에 else를 사용할 수 있음. if가 참이면 else는 거짓
            if가 거짓이면 else가 참이어야만 합니다.
'''
age = 17

if age >= 19:
    print("성인입니다.")
else:
    print("성인이 아닙니다.")
'''
        이상의 코드에서 확인할 수 있는 점은 23번 라인의 print문은 if절에,
        25번 라인의 print문은 else절에 종속되어있다는 점을,
        들여 쓰기를 통해 알아볼 수 있습니다.
        
        if-else는 서로 반대이기 때문에 else절에서는 조건식을 명시하지 않음.
        
    3. if-elif-else 문
        여러 조건을 동시에 검사하기 위해서 사용하는 구조.
'''
score = 85

if score >= 90:
    print("성취도 A입니다.")
elif score >= 80:
    print("성취도 B입니다.")
else:
    print("다시하세요.")
'''
        이상의 코드에서 확인할 수 있는 점
        1) 첫 번째 조건은 False이지만,
        2) 두 번째 조건이 True이므로 41번 라인이 실행됨.
        3) 이후 조건들은 확인하지 않고 조건문이 종료됨.
        
        if문의 전체 형식
        if 조건식1:
            실행문1
        (elif 조건식2:)             -> optional
            (실행문2)
        (elif 조건식3:)             -> optional
            (실행문3)
        (else:)                    -> optional
            (실행문4)
            
    4. 중첩 if문(Nesed if)
        조건문 내부에 또 다른 조건문을 사용할 수 있음. 다만 가독성이 좀 떨어지는 편이라서
        추후에 배우는 논리연산자와 함께 사용하는 편.
'''
# age = 25
# has_ticket = True
#
# if age >= 19:
#     # if문 내부에 다시 if문 작성
#     if has_ticket:
#         print("영화관 입장이 가능합니다.")
#     else:
#         print("티켓을 구매하세요.")
# else:
#     print("미성년자는 입장할 수 없습니다.")
'''
    이상의 코드에서 확인할 수 있는 점은 먼저 age가 19 이상인지 확인하고,
    19 미만이라면 곧장 74번 실행문이 실행됩니다.
    만약에 19 이상이라면, 티켓 유무에 따라서 70번 라인 혹은 72번 라인이 실행
'''
# if age >= 19 and has_ticket:
#     print("티켓을 구매하세요.")
# else:
#     print("입장할 수 없습니다.")
'''
    5. 조건문에서 자주 쓰이는 연산자
        비교 연산자 :
            1) == : 같다
            2) != : 같지않다
            3) > : 초과
            4) < : 미만
            5) >= : 이상
            6) <= : 이하
        논리 연산자 :
            1) and : A and B -> A와 B 모두 참일때 실행문 실행
            2) or : A or B -> A 혹은 B 둘중에 하나가 참이면 실행문 실행
            3) not : if not A -> A가 False일 때 실행문 실행
            
이까지 타이핑 다 하신 분들은
chapter02_condition 우클릭 -> leap_year 패키지 생성
leap_year 우클릭 -> main.py 파일 생성

'''







